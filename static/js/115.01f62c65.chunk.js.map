{"version":3,"file":"static/js/115.01f62c65.chunk.js","mappings":"gRAEMA,EAAWC,EAAAA,GAAAA,GAAH,mMASRC,EAAWD,EAAAA,GAAAA,GAAH,8I,GAMDA,EAAAA,GAAAA,GAAH,0CAGQA,EAAAA,GAAAA,EAAH,sC,QC4Cf,EA3Da,WACX,OAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,IAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE+BC,EAAAA,EAAAA,IAAmBH,GAFlD,OAEUI,EAFV,OAGIL,EAAaK,EAAaC,MAH9B,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdH,EACD,GAAE,CAACJ,IAECF,EAIL,OAAOA,EAAUU,OAAS,GACxB,SAACd,EAAD,UACGI,EAAUW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACb,UAACjB,EAAD,YAEI,gBACEkB,IACED,EAAY,yCAC0BA,GAD1B,+CAIdE,IAAKJ,EACLK,MAAM,MACNC,OAAO,SAGX,4BACE,wBACE,uBAAIN,OAEN,wCACa,uBAAIC,YAlBNF,EADF,OA0BjB,cACEQ,MAAO,CACLC,SAAU,GACVC,WAAY,IACZC,MAAO,UAJX,6CAUH,C,+LC7DKC,EAAU,mCAEVC,EAAW,+BACXC,EAAS,UAAMD,EAAN,uBACTE,EAAU,UAAMF,EAAN,iBACVG,EAAS,UAAMH,EAAN,UAETI,EAAgB,mCAAG,oGACAC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,oBAAkCF,IADlC,cACjBO,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,qDAKhBC,EAAgB,mCAAG,WAAMC,GAAN,uFACAJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACIH,EADJ,kBACqBU,IAFrB,cACjBH,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOhBG,EAAsB,mCAAG,WAAMjC,GAAN,uFACN4B,EAAAA,EAAAA,IAAA,UAClBF,EADkB,YACL1B,EADK,oBACcsB,IAFR,cACvBO,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOtB3B,EAAkB,mCAAG,WAAMO,GAAN,uFACFkB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,YACLhB,EADK,4BACiBY,IAFf,cACnBO,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,sDAOlBI,EAAkB,mCAAG,WAAMxB,GAAN,uFACFkB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,YACLhB,EADK,4BACiBY,IAFf,cACnBO,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,qD","sources":["components/cast/Cast.styled.js","components/cast/Cast.jsx","service/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst CastList = styled.ul`\n  list-style: none;\n  padding: 25px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 25px;\n  justify-content: space-around;\n  border-bottom: 2px solid rgb(166 164 164);\n`;\nconst CastItem = styled.li`\n  //   margin: 10px 0 16px;\n  padding: 2px 8px;\n  width: 300px;\n  box-shadow: 1px 2px 4px 3px rgba(0, 0, 0, 0.5);\n`;\nconst Name = styled.h3`\n  margin: 8px 0;\n`;\nconst Character = styled.p`\n  margin: 0;\n`;\nexport { CastList, CastItem, Name, Character };\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { featchMovieCredits } from '../../service/Api';\nimport { CastList, CastItem } from './Cast.styled';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovieCast() {\n      try {\n        const getMovieCast = await featchMovieCredits(movieId);\n        setMovieCast(getMovieCast.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovieCast();\n  }, [movieId]);\n\n  if (!movieCast) {\n    return;\n  }\n\n  return movieCast.length > 0 ? (\n    <CastList>\n      {movieCast.map(({ id, name, character, profile_path }) => (\n        <CastItem key={id}>\n          {\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : `http://www.suryalaya.org/images/no_image.jpg`\n              }\n              alt={name}\n              width=\"100\"\n              height=\"150\"\n            />\n          }\n          <div>\n            <p>\n              <b>{name}</b>\n            </p>\n            <p>\n              Character: <b>{character}</b>\n            </p>\n          </div>\n        </CastItem>\n      ))}\n    </CastList>\n  ) : (\n    <p\n      style={{\n        fontSize: 22,\n        fontWeight: 700,\n        color: '000000',\n      }}\n    >\n      No information about cast yet...\n    </p>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '992e567e43c913ea6cedbae9c8870c1e';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/day`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst MOVIE_URL = `${BASE_URL}/movie`;\n\nconst fetchTrendsFilms = async () => {\n  const responce = await axios.get(`${TREND_URL}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nconst featchSearchFilm = async query => {\n  const responce = await axios.get(\n    `${SEARCH_URL}?api_key=${API_KEY}&query=${query}`\n  );\n  return responce.data;\n};\n\nconst featchMovieDetailsById = async movieId => {\n  const responce = await axios.get(\n    `${MOVIE_URL}/${movieId}?api_key=${API_KEY}`\n  );\n  return responce.data;\n};\n\nconst featchMovieCredits = async id => {\n  const responce = await axios.get(\n    `${MOVIE_URL}/${id}/credits?api_key=${API_KEY}`\n  );\n  return responce.data;\n};\n\nconst featchMovieReviews = async id => {\n  const responce = await axios.get(\n    `${MOVIE_URL}/${id}/reviews?api_key=${API_KEY}`\n  );\n  return responce.data;\n};\n\nexport {\n  fetchTrendsFilms,\n  featchSearchFilm,\n  featchMovieDetailsById,\n  featchMovieCredits,\n  featchMovieReviews,\n};\n"],"names":["CastList","styled","CastItem","useState","movieCast","setMovieCast","movieId","useParams","useEffect","featchMovieCredits","getMovieCast","cast","console","log","length","map","id","name","character","profile_path","src","alt","width","height","style","fontSize","fontWeight","color","API_KEY","BASE_URL","TREND_URL","SEARCH_URL","MOVIE_URL","fetchTrendsFilms","axios","responce","data","featchSearchFilm","query","featchMovieDetailsById","featchMovieReviews"],"sourceRoot":""}